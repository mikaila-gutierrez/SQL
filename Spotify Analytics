--This project consists of me pulling data Spotify data from Kaggle in order to analyze it using SQL

--First I created the table

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

-- Next, I inserted the Spotify Data .csv into the new table.
-- Below is the simple query used to confirm the data entry

SELECT * FROM BIT_DB.Spotifydata;

-- Now, some quick data analysis.
-- Determine the average danceability & popularity by each artist and track title

SELECT artist_name, track_name, avg(danceability), avg(popularity)
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name;

-- Who are the top 10 artists by popularity?

SELECT track_name, artist_name, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 10;

-- Longest song released. Who and how long?

SELECT track_name, artist_name,duration_ms
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY duration_ms
LIMIT 1;

--What song had the highest tempo?

SELECT track_name, artist_name,MAX(tempo)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
LIMIT 1;

--What song had the lowest key?

SELECT track_name, artist_name,MIN(key)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
LIMIT 1;

-- Calculate the average popularity for the artists in the Spotify data table.
-- Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”

WITH popularity_average_CTE AS (
SELECT s.artist_name,AVG(s.popularity) AS average_popularity
FROM SpotifyData s 
GROUP BY s.artist_name
)
SELECT  artist_name, average_popularity,'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;

-- How long would a playlist of the Top 10 tracks take to listen to?

WITH Top_10_CTE AS (
SELECT s.artist_name,s.popularity, duration_ms
FROM SpotifyData s 
GROUP BY s.artist_name
ORDER BY s.popularity
LIMIT 10
)
SELECT SUM(duration_ms)
FROM Top_10_CTE;

